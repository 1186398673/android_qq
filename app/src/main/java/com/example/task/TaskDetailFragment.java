package com.example.task;import android.os.Bundle;import android.text.Editable;import android.text.TextWatcher;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.EditText;import android.widget.ImageButton;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.fragment.app.Fragment;import com.example.myapplication.R;import com.example.task.TaskItem;import java.text.SimpleDateFormat;import java.util.Locale;public class TaskDetailFragment extends Fragment {    private TaskItem taskItem;    private OnTaskUpdatedListener listener;    private OnBackPressedListener backListener; // 新增接口    // 定义回调接口    public interface OnTaskUpdatedListener {        void onTaskUpdated(TaskItem updatedTask);    }    // 新增的接口    public interface OnBackPressedListener {        void onBackPressed();    }    public TaskDetailFragment() {        // Required empty public constructor    }    public void setOnTaskUpdatedListener(OnTaskUpdatedListener listener) {        this.listener = listener;    }    // 新增的方法，用于设置返回监听器    public void setOnBackPressedListener(OnBackPressedListener listener) {        this.backListener = listener;    }    public static TaskDetailFragment newInstance(TaskItem taskItem) {        TaskDetailFragment fragment = new TaskDetailFragment();        Bundle args = new Bundle();        args.putSerializable("taskItem", taskItem);        fragment.setArguments(args);        return fragment;    }    @Override    public void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        // 获取Activity中的监听器        if (getActivity() instanceof OnTaskUpdatedListener) {            listener = (OnTaskUpdatedListener) getActivity();        }        // 获取返回监听器        if (getActivity() instanceof OnBackPressedListener) {            backListener = (OnBackPressedListener) getActivity();        }    }    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,                             @Nullable Bundle savedInstanceState) {        // Inflate the layout for this fragment        View view = inflater.inflate(R.layout.fragment_task_detail, container, false);        EditText etTitle = view.findViewById(R.id.et_title);        EditText etContent = view.findViewById(R.id.et_content);        ImageButton btnBack = view.findViewById(R.id.btn_back);        ImageButton btnSave = view.findViewById(R.id.btn_save);        if (getArguments() != null) {            taskItem = (TaskItem) getArguments().getSerializable("taskItem");            if (taskItem != null) {                // 设置初始值                etTitle.setText(taskItem.getTitle());                etContent.setText(taskItem.getContent());                // 设置日期按钮文本                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());                // 监听标题变化                etTitle.addTextChangedListener(new TextWatcher() {                    @Override                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {}                    @Override                    public void onTextChanged(CharSequence s, int start, int before, int count) {}                    @Override                    public void afterTextChanged(Editable s) {                        taskItem.setTitle(s.toString());                    }                });                // 监听内容变化                etContent.addTextChangedListener(new TextWatcher() {                    @Override                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {}                    @Override                    public void onTextChanged(CharSequence s, int start, int before, int count) {}                    @Override                    public void afterTextChanged(Editable s) {                        taskItem.setContent(s.toString());                    }                });                // 绑定返回按钮                btnBack.setOnClickListener(v -> {                    if (backListener != null) {                        backListener.onBackPressed(); // 调用返回监听器                    }                });                // 绑定保存按钮                btnSave.setOnClickListener(v -> {                    if (listener != null) {                        listener.onTaskUpdated(taskItem); // 触发数据库更新                    }                    Toast.makeText(getActivity(), "任务已更新", Toast.LENGTH_SHORT).show();                });            }        }        return view;    }}